<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Modeling of Everything</title>
    <link>http://shuod.github.io/tags/python/</link>
    <description>Recent content in Python on Modeling of Everything</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 24 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://shuod.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kick start docker for a deeplearning environment</title>
      <link>http://shuod.github.io/post/kick_start_docker_for_a_deeplearning_environment/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://shuod.github.io/post/kick_start_docker_for_a_deeplearning_environment/</guid>
      <description>1. what is docker The first virtualization machine I setup was back to VMWare era. At that time, by using VMWare, you can install linux on a windows machine, and it is very useful too. For me at that time, knowing nothing about linux, I have to google everything, &amp;ldquo;how to start X window&amp;rdquo;, &amp;ldquo;how to restart service&amp;rdquo;, &amp;ldquo;how to install software&amp;rdquo;. So running the linux in an application-like manner, I can convienetly switch back to browser to search online.</description>
    </item>
    
    <item>
      <title>Scan a directory in python35</title>
      <link>http://shuod.github.io/post/scandir-in-python35/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://shuod.github.io/post/scandir-in-python35/</guid>
      <description>As one of my daily works, checking files from simulation results is of course my practical need. Therefore, I am always interested in using different ways to do it. One of my previous post, &amp;ldquo;checking_files_in_subfolders_using_power_shell&amp;rdquo; was on how to use power shell in windows 10 to do this job. Here I am going to test other ways that I used even before powershell script.
1 find This is a Linux command and it is actually my first way to iterate folders to find files, since the operation system I work with in Supercomputer is Linux.</description>
    </item>
    
    <item>
      <title>Upgrade python to version 3.5 in Centos 6.8 and deploy flask web app framework  (updated on 20170604)</title>
      <link>http://shuod.github.io/post/upgrade-python3-centos6-deploy-flask/</link>
      <pubDate>Tue, 13 Sep 2016 10:33:28 -0600</pubDate>
      
      <guid>http://shuod.github.io/post/upgrade-python3-centos6-deploy-flask/</guid>
      <description>Updated on 20170604: I put in more content to setup on tools chain for python development environment. Extra options were deleted.
I bought a VPS from ramnode last time (last blog), so I guess it is a good time to deploy some web application on it. Since the python came with Centos 6.8 is kind of old (python 2.6), the first step I take is to upgrade the python compiler in Centos 6.</description>
    </item>
    
    <item>
      <title>Notes to Test driven development with Django using pycharm (chp 5 database!)</title>
      <link>http://shuod.github.io/post/tdd-django-pycharm-4-database-intro/</link>
      <pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://shuod.github.io/post/tdd-django-pycharm-4-database-intro/</guid>
      <description>0 Checkpoints  ORM model in Django  1 The first unit test First, let&amp;rsquo;s write the unit test for database. What are we going to test then? Well, as we discussed in the last section, the unit test is about testing the logic, flow control. So what we are going to do here is to test:
 We input a value as the first row in the webpage. Does the database receives the same value as the input?</description>
    </item>
    
    <item>
      <title>Notes to Test driven development with Django using pycharm (chp 4-5)</title>
      <link>http://shuod.github.io/post/tdd-django-pycharm-3/</link>
      <pubDate>Sat, 09 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://shuod.github.io/post/tdd-django-pycharm-3/</guid>
      <description>0 Checkpoints  Don&amp;rsquo;t use unit test to test a constant. Unit test is about testing logic, flow control and configuration.
 Run unit tests from pycharm IDE : Tools\=\=&amp;gt;Run manage.py task &amp;hellip;
 Another development cycle, follow the pattern, i.e. if you choose MCV, then if you changed M then you should change C, and V correspondingly.
 Organize the code in unit test: create test, call function under the test and assertions</description>
    </item>
    
    <item>
      <title>Notes to Test driven development with Django using pycharm (chp 2-3)</title>
      <link>http://shuod.github.io/post/tdd-django-pycharm-2/</link>
      <pubDate>Fri, 08 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://shuod.github.io/post/tdd-django-pycharm-2/</guid>
      <description>0 Checkpoints  Blackbox Test=Functional Test=Acceptance Test= End-to-End Test ; These names are referring to the same thing. The purpose of this kind of test is to look at how the whole application functioned from outside/custom&amp;rsquo;s point of view. The term black box test is forged is because we just want to test the outcome of the whole code without knowing the details inside App = function; Structure the code into several apps/ functions (def function()).</description>
    </item>
    
    <item>
      <title>Notes to test driven development with Django using pycharm (chp 1)</title>
      <link>http://shuod.github.io/post/tdd-django-pycharm-1/</link>
      <pubDate>Thu, 07 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://shuod.github.io/post/tdd-django-pycharm-1/</guid>
      <description>0 Check points  Setting up a virtual environment and adding packages to the project Editing the command line parameters to the &amp;ldquo;run&amp;rdquo; button, which is equivalent to &amp;ldquo;python xxx.py xxx&amp;rdquo; Checking the output log space on the bottom of the screen. Functional test to retrieve the web page from a server  1 setup the virtual environment After downloading and installing the pycharm, the first time you start you would see the following:</description>
    </item>
    
    <item>
      <title>Linear Regression with different Python libs: numpy, scipy</title>
      <link>http://shuod.github.io/post/linear-regression-with-python-lib/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://shuod.github.io/post/linear-regression-with-python-lib/</guid>
      <description>&lt;p&gt;Linearing regression is one of the fundamental techqiques to use when analyze the data. If you were using Python, you would have several options to do this, including numpy, scipy and sklearn.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>